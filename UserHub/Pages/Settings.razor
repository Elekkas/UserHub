@page "/settings"
@attribute [Authorize]

@using Authorization.DataTransferObjects
@using EFDataAccessLibrary.DataAccess
@using EFDataAccessLibrary.Models
@using System.Security.Claims

@inject AuthenticationStateProvider AuthProvider
@inject WebDatabaseContext webDatabase

<PageTitle>Settings - UserHub</PageTitle>


<MudPaper Class="pa-15 ma-2" Elevation="0" Width="100%">
        <MudContainer MaxWidth="MaxWidth.Medium">
            <MudCard Elevation="3" Class="pa-10">
                <MudText Color="Color.Dark" GutterBottom Typo="Typo.h3" Align="Align.Center">Account Settings</MudText>
                <MudForm>
                        <MudTextField ReadOnly="true" @bind-Value="@username" Label="Username" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentText="Change" AdornmentColor="Color.Primary"/>
                        <MudTextField ReadOnly="true" @bind-Value="@email" Label="Email" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentText="Change" AdornmentColor="Color.Primary"/>
                        <MudTextField ReadOnly="true" @bind-Value="@hashedPass" Label="Password" InputType="InputType.Password" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentText="Change" AdornmentColor="Color.Primary"/>
                </MudForm>   
            </MudCard>
        </MudContainer>
    </MudPaper>

@code {

    protected string username;
    protected string email;
    protected string hashedPass = "Lorem Ipsum";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        username = authState.User.Identity.Name;

        email = webDatabase.Users.Where(x => x.UserName == username).FirstOrDefault().Email;
    }

    protected async Task onChangeEmail()
    {
        
    }

}
